name: Release Client
on:
  release:
    types:
      - created
jobs:
  upload_assets:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            arch: x86_64
          - os: macos-latest
            arch: amd64
          - os: macos-latest
            arch: arm64
          - os: ubuntu-latest
            arch: x86_64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.1

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Build Vue project for Linux
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS'}}
        run: |
          cd web
          npm install
          npm run build
          mkdir static
          cp -R dist/* static/
          cd ../

      - name: Build Vue project for Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          cd web
          npm install
          npm run build
          mkdir static
          xcopy /E /I dist\* static\
          cd ..

      - name: Build for Linux
        if: ${{ runner.os == 'Linux' }}
        run: GOOS=linux GOARCH=amd64 go build -o dbland-linux-amd64

      - name: Build for macOS (amd64)
        if: ${{ runner.os == 'macOS' && matrix.arch == 'arm64' }}
        run: GOOS=darwin GOARCH=amd64 go build -o dbland-darwin-amd64

      - name: Build for macOS (arm64)
        if: ${{ runner.os == 'macOS' && matrix.arch == 'arm64' }}
        run: GOOS=darwin GOARCH=arm64 go build -o dbland-darwin-arm64

      - name: Build for Windows
        if: ${{ runner.os == 'Windows' }}
        run: GOOS=windows GOARCH=amd64 go build -o dbland-windows-amd64.exe

      - name: Create Linux tar.gz (amd64)
        if: ${{ runner.os == 'Linux' }}
        run: tar -czf dbland-linux-amd64.tar.gz dbland-linux-amd64

      - name: Create macOS tar.gz (amd64)
        if: ${{ runner.os == 'macOS' && matrix.arch == 'amd64' }}
        run: tar -czf dbland-darwin-amd64.tar.gz dbland-darwin-amd64

      - name: Create macOS tar.gz (arm64)
        if: ${{ runner.os == 'macOS' && matrix.arch == 'arm64' }}
        run: tar -czf dbland-darwin-arm64.tar.gz dbland-darwin-arm64

      - name: Create Windows zip
        if: ${{ runner.os == 'Windows' }}
        run: zip -r dbland-windows-amd64.zip dbland-windows-amd64.exe


      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          asset-path: |
            dbland-linux-amd64.tar.gz
            dbland-darwin-amd64.tar.gz
            dbland-darwin-arm64.tar.gz
            dbland-windows-amd64.zip
          release-tag: ${{ github.ref }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
