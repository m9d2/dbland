name: Releases
on:
  push:
    tags:
      - "v*"
jobs:
  build-web:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Build Vue project
        run: |
          cd web
          npm install
          npm run build
          mkdir static
          cp -R dist/* static/
          cd ../

  build-go:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        arch:
          - amd64
          - arm64
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.1

      - name: Build Go Project
        run: go build -o dbland-${{ matrix.os }}-${{ matrix.arch }}

      - name: Compress files
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a release.zip static myapp-${{ matrix.os }}-${{ matrix.arch }} config.yaml README.md README_CN.md
          else
            tar -czvf release.tar.gz static myapp-${{ matrix.os }}-${{ matrix.arch }} config.yaml README.md README_CN.md
          fi

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          asset_path: ${{ matrix.os == 'windows-latest' ? 'release.zip' : 'release.tar.gz'}}
          asset_name: dbland-${{ matrix.os }}-${{ matrix.arch }}.${{ matrix.os == 'windows-latest' ? 'zip' : 'tar.gz' }}
          asset_content_type: application/${{ matrix.os == 'ubuntu-latest' ? 'gzip' : 'zip' }}
          release-tag: ${{ github.ref }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
